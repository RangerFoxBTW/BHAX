<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Gödel!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>
    
    <section>
        <title>Gengszterek</title>
        <para>
            Gengszterek rendezése lambdával a Robotautó Világbajnokságban
            <link xlink:href="https://youtu.be/DL6iQwPx1Yw">https://youtu.be/DL6iQwPx1Yw</link>(8:05-től)
        </para>
        
    </section>

    <section>
        <title>C++11 Custom Allocator</title>
        <para>
            <link xlink:href="https://prezi.com/jvvbytkwgsxj/high-level-programming-languages-2-c11-allocators/">https://prezi.com/jvvbytkwgsxj/high-level-programming-languages-2-c11-allocators/</link> a
            CustomAlloc-os példa, lásd C forrást az UDPROG repóban!
        </para>
        
    </section>

    <section>
        <title>STL map érték szerinti rendezése</title>
        <para>
                Például: <link xlink:href="https://github.com/nbatfai/future/blob/master/cs/F9F2/fenykard.cpp#L180">https://github.com/nbatfai/future/blob/master/cs/F9F2/fenykard.cpp#L180</link>
        </para>
        
       
    </section>

    <section>
        <title>
            Alternatív Tabella rendezése
        </title>
        <para>
            Mutassuk be a <link xlink:href="https://progpater.blog.hu/2011/03/11/alternativ_tabella">https://progpater.blog.hu/2011/03/11/alternativ_tabella</link> a programban a java.lang
            Interface Comparable<![CDATA[ <T> ]]> szerepét!
        </para>
        
        
    </section>

    <section>
        <title>Prolog családfa</title>
        <para>
            Ágyazd be a Prolog családfa programot C++ vagy Java programba! Lásd para_prog_guide.pdf!
        </para>
    </section>

    <section>
        <title>GIMP Scheme hack</title>
        <para>
            Ha az előző félévben nem dolgoztad fel a témát (például a mandalás vagy a króm szöveges
dobozosat) akkor itt az alkalom!
        </para>
    </section>

    <section>
        <title>EPAM: Mátrix szorzás Stream API-val</title>
        <para>
            Implementáld le a mátrix szorzást Java-ban for és while ciklusok használata nélkül.
        </para>
    </section>

    <section>
        <title>EPAM: LinkedList vs ArrayList</title>
        <para>
            Mutass rá konkrét esetekre amikor a Java-beli LinkedList és ArrayList rosszabb performanciát
eredményezhet a másikhoz képest. (Lásd még LinkedList és ArrayList forráskódja). Végezz
méréseket is. (mit csinál az ArrayList amikor megtelik)
        </para>
    </section>

    <section>
        <title>EPAM: Refactoring</title>
        <para>
            Adott egy “legacy” kód mely tartalmaz anonymus interface implementációkat, ciklusokat és
feltételes kifejezések. Ebben a feladatban ezt a “legacy” kódot szeretnénk átírni lambda kifejezések
segítségével (metódus referencia használata előnyt jelent!)
        </para>
    </section>

            
</chapter>